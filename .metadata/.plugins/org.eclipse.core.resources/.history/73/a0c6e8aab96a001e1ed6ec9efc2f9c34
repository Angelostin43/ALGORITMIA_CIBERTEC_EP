package gui;

import examen.Congeladora;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import java.awt.Font;
import javax.swing.UIManager;

public class Problema_1 extends JFrame implements ActionListener {

	private static final long serialVersionUID = 1L;

	private JPanel contentPane;
	private JButton btnProcesar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		}
		catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Problema_1 frame = new Problema_1();
					frame.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Problema_1() {
		setTitle("Problema_1");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 500);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		btnProcesar = new JButton("Procesar");
		btnProcesar.addActionListener(this);
		btnProcesar.setBounds(173, 11, 89, 23);
		contentPane.add(btnProcesar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 48, 414, 403);
		contentPane.add(scrollPane);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 13));
		scrollPane.setViewportView(txtS);
	}

	public void actionPerformed(ActionEvent arg0) {
		if (arg0.getSource() == btnProcesar) {
			actionPerformedBtnProcesar(arg0);
		}
	}

	protected void actionPerformedBtnProcesar(ActionEvent arg0) {
		Congeladora co = new Congeladora(13.5,16.3,50.0);
		
		double incrAncho = co.getAncho() * (1 + (5.0/100));
		co.setAncho(incrAncho);
		
		double dismAlto = co.getAlto() * (1 - (15.0/100));
		co.setAlto(dismAlto);
		mostrarCongeladora(co);
		
	}
	
	void mostrarCongeladora(Congeladora c) {
		DecimalFormat df = new DecimalFormat("#.##"); // Define el formato decimal

	    imprimir("Direccion de memoria: " + c);
	    imprimir("Ancho : " + df.format(c.getAncho())); // Formatea el valor del ancho
	    imprimir("Alto : " + df.format(c.getAlto())); // Formatea el valor del alto
	    imprimir("Profundidad : " + df.format(c.getProfundidad())); // Formatea el valor de la profundidad
	    imprimir("Area de la Base : " + df.format(c.areaDeLaBase())); // Formatea el valor del área
	    imprimir("Volumen : " + df.format(c.volumen())); // Formatea el valor del volumen
	    imprimir("Clase : " + c.Clase());
	    imprimir("");
	}

	void imprimir(String s) {
		txtS.append(s + "\n");
	}
}
